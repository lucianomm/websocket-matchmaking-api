AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters: 
  Environment:
    Type: String
    Default: DEV
    Description: The name of the environment to deploy to
  HostedZoneId:
    Type: String
    Description: The ID of the hosted zone to create the record in (your root domain name)
  DedicatedServerClientSecret:
    Type: String
    Description: The secret for the dedicated server to be authenticated in the base64 basic auth
  DedicatedServerClientId:
    Type: String
    Description: The id for the dedicated server to be authenticated in the base64 basic auth

  UserApiCustomDomainName:
    Type: String

  MatchmakingCustomDomainName:
    Type: String
  MatchMakingTableBaseName:
    Type: String
    Default: UserMatchMakingData
    Description: The name of the DynamoDB table for storing MatchMakingTable
  MatchMakingTablePK:
    Type: String
    Default: UserId
    Description: The name of the primary key for the MatchMakingTable
  ConnectionTableBaseName:
    Type: String
    Default: WebsocketConnections
    Description: The name of the DynamoDB table for storing ConnectionTable
  ConnectionTablePK:
    Type: String
    Default: ConnectionId
    Description: The name of the primary key for the ConnectionTable
  CurrentMatchesTableBaseName:
    Type: String
    Default: CurrentMatches
    Description: The name of the DynamoDB table for storing CurrentMatches
  CurrentMatchesTablePK:
    Type: String
    Default: MatchId
    Description: The name of the primary key for the CurrentMatches

Globals:
  Function:
    Timeout: 5
    Handler: app.lambda_handler
    Runtime: python3.9

Resources:

  JwtAuth: # Authorizer for JWT tokens generated by the Epic Games OAuth service
    Type: "AWS::Serverless::Function"
    Properties:
      Runtime: nodejs16.x
      CodeUri: authorizers/jwtAuthorizer
      Handler: app.handler
      Description: Authorizer for any JWT token configuring JWKS_URL environment variable.
      Environment:
        Variables:
          ISSUER: https://api.epicgames.dev/auth/v1/oauth
          JWKS_URI: https://api.epicgames.dev/auth/v1/oauth/jwks
          AUDIENCE: xyza7891LKxSJNsWmRALdJzNrDYQrfIb
  
  Base64AuthFunction: # Authorizer for base64 encoded server credentials
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: authorizers/base64Authorizer
      Description: Authorizer for any Base64 Auth Bearer configuring JWKS_URL environment variable
      Environment:
        Variables:
          CLIENT_ID: !Ref DedicatedServerClientId
          CLIENT_SECRET: !Ref DedicatedServerClientSecret

  MatchMakingTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: !Sub '${MatchMakingTableBaseName}_${Environment}'
      AttributeDefinitions:
        - AttributeName: !Ref MatchMakingTablePK
          AttributeType: 'S'
      KeySchema:
        - AttributeName: !Ref MatchMakingTablePK
          KeyType: 'HASH'
      BillingMode: 'PAY_PER_REQUEST'

  ConnectionTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: !Sub '${ConnectionTableBaseName}_${Environment}'
      AttributeDefinitions:
        - AttributeName: !Ref ConnectionTablePK
          AttributeType: 'S'
      KeySchema:
        - AttributeName: !Ref ConnectionTablePK
          KeyType: 'HASH'
      BillingMode: 'PAY_PER_REQUEST'

  CurrentMatches:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: !Sub '${CurrentMatchesTableBaseName}_${Environment}'
      AttributeDefinitions:
        - AttributeName: !Ref CurrentMatchesTablePK
          AttributeType: 'S'
      KeySchema:
        - AttributeName: !Ref CurrentMatchesTablePK
          KeyType: 'HASH'
      BillingMode: 'PAY_PER_REQUEST'

  UserApiStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: userApi.yaml
      Parameters:
        Environment: !Ref Environment
        JwtAuthFunction: !GetAtt JwtAuth.Arn
        Base64AuthFunction: !GetAtt Base64AuthFunction.Arn
        HostedZoneId: !Ref HostedZoneId
        CustomDomainName: !Ref UserApiCustomDomainName
        UserApiBasePath: v1
        MatchMakingTableName: !Sub '${MatchMakingTableBaseName}_${Environment}'
        MatchMakingTablePK: !Ref MatchMakingTablePK
        MatchmakingCustomDomainName: !Ref MatchmakingCustomDomainName
        ConnectionTableName: !Sub '${ConnectionTableBaseName}_${Environment}'
        ConnectionTablePK: !Ref ConnectionTablePK
        CurrentMatchesTableName: !Sub '${CurrentMatchesTableBaseName}_${Environment}'
        CurrentMatchesTablePK: !Ref CurrentMatchesTablePK
    DependsOn: MatchMakingApiStack

  MatchMakingApiStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: matchmakingApi.yaml
      Parameters:
        JwtAuthorizerArn: !GetAtt JwtAuth.Arn
        HostedZoneId: !Ref HostedZoneId
        CustomDomainName: !Ref MatchmakingCustomDomainName
        Environment: !Ref Environment
        MatchMakingTableName: !Sub '${MatchMakingTableBaseName}_${Environment}'
        MatchMakingTablePK: !Ref MatchMakingTablePK
        ConnectionTableName: !Sub '${ConnectionTableBaseName}_${Environment}'
        ConnectionTablePK: !Ref ConnectionTablePK
        CurrentMatchesTableName: !Sub '${CurrentMatchesTableBaseName}_${Environment}'
        CurrentMatchesTablePK: !Ref CurrentMatchesTablePK